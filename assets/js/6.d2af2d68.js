(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{172:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h3",{attrs:{id:"_1-物理像素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-物理像素","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 物理像素")]),t._v(" "),s("p",[t._v("设备真实的像素(1920*1680这些)")]),t._v(" "),s("h3",{attrs:{id:"_2-设备独立像素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-设备独立像素","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 设备独立像素")]),t._v(" "),s("p",[t._v("就是类似iphone6 375*650这种(模拟器上一般是这些)")]),t._v(" "),s("h3",{attrs:{id:"_3-dpr"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-dpr","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. DPR")]),t._v(" "),s("p",[t._v("设备像素比device pixel ratio简称dpr，即物理像素和设备独立像素的比值。\n在web中，浏览器为我们提供了window.devicePixelRatio来帮助我们获取dpr。\n在css中，可以使用媒体查询min-device-pixel-ratio，区分dpr：")]),t._v(" "),s("h3",{attrs:{id:"_4-布局视口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-布局视口","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. 布局视口")]),t._v(" "),s("p",[t._v("布局视口(layout viewport)：当我们以百分比来指定一个元素的大小时，它的计算值是由这个元素的包含块计算而来的。当这个元素是最顶级的元素时，它就是基于布局视口来计算的。\n所以，布局视口是网页布局的基准窗口，在PC浏览器上，布局视口就等于当前浏览器的窗口大小（不包括borders 、margins、滚动条）。\n在移动端，布局视口被赋予一个默认值，大部分为980px，这保证PC的网页可以在手机浏览器上呈现，但是非常小，用户可以手动对网页进行放大。\n我们可以通过调用document.documentElement.clientWidth / clientHeight来获取布局视口大小。")]),t._v(" "),s("h3",{attrs:{id:"_5-视觉视口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-视觉视口","aria-hidden":"true"}},[t._v("#")]),t._v(" 5. 视觉视口")]),t._v(" "),s("p",[t._v("视觉视口(visual viewport)：用户通过屏幕真实看到的区域。\n视觉视口默认等于当前浏览器的窗口大小（包括滚动条宽度）。\n当用户对浏览器进行缩放时，不会改变布局视口的大小，所以页面布局是不变的，但是缩放会改变视觉视口的大小。\n例如：用户将浏览器窗口放大了200%，这时浏览器窗口中的CSS像素会随着视觉视口的放大而放大，这时一个CSS像素会跨越更多的物理像素。\n所以，布局视口会限制你的CSS布局而视觉视口决定用户具体能看到什么。")]),t._v(" "),s("h3",{attrs:{id:"_6-页面缩放系数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-页面缩放系数","aria-hidden":"true"}},[t._v("#")]),t._v(" 6.页面缩放系数")]),t._v(" "),s("p",[t._v("上面在介绍CSS像素时曾经提到页面的缩放系数 = CSS像素 / 设备独立像素，实际上说页面的缩放系数 = 理想视口宽度 / 视觉视口宽度更为准确。\n页面的缩放系数 = CSS像素 / 设备独立像素")]),t._v(" "),s("h3",{attrs:{id:"_7-javascript拼接图片url"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-javascript拼接图片url","aria-hidden":"true"}},[t._v("#")]),t._v(" 7. JavaScript拼接图片url")]),t._v(" "),s("p",[t._v("使用window.devicePixelRatio获取设备像素比，遍历所有图片，替换图片地址：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" dpr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("devicePixelRatio"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" images "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelectorAll")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'img'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nimages"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("img")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  img"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("dpr"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("x.")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h3",{attrs:{id:"_8-vw相关单位"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-vw相关单位","aria-hidden":"true"}},[t._v("#")]),t._v(" 8.vw相关单位")]),t._v(" "),s("p",[t._v("vw : 1vw 等于视口宽度的1%\nvh : 1vh 等于视口高度的1%\nvmin : 选取 vw 和 vh 中最小的那个\nvmax : 选取 vw 和 vh 中最大的那个")]),t._v(" "),s("h3",{attrs:{id:"_9-如何设置font-size"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-如何设置font-size","aria-hidden":"true"}},[t._v("#")]),t._v(" 9.如何设置font-size")]),t._v(" "),s("p",[t._v("看你怎么设置1rem的值是多少")]),t._v(" "),s("h3",{attrs:{id:"_10-bfc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-bfc","aria-hidden":"true"}},[t._v("#")]),t._v(" 10.BFC")]),t._v(" "),s("p",[t._v("块级格式化上下文")]),t._v(" "),s("p",[t._v("满足下列条件之一就可触发BFC\n　　【1】根元素，即HTML元素\n　　【2】float的值不为none\n　　【3】overflow的值不为visible\n　　【4】display的值为inline-block、table-cell、table-caption\n　　【5】position的值为absolute或fixed")]),t._v(" "),s("p",[t._v("BFC布局规则：\n1.内部的Box会在垂直方向，一个接一个地放置。\n2.Box垂直方向的距离由margin决定。属于同一个BFC的两个相邻Box的margin会发生重叠\n3.每个元素的margin box的左边， 与包含块content box的左边相接触(对于从左往右的格式化，否则相反)。即使存在浮动也是如此。\n4.BFC的区域不会与float box重叠。\n5.BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。\n6.计算BFC的高度时，浮动元素也参与计算")]),t._v(" "),s("p",[t._v("BFC有哪些作用：\n1自适应两栏布局")]),t._v(" "),s("p",[t._v("2可以阻止元素被浮动元素覆盖\n3可以包含浮动元素——清除内部浮动\n4.分属于不同的BFC时可以阻止margin重叠")]),t._v(" "),s("p",[t._v("div会被float覆盖，而文本却没有被float覆盖，是因为float当初设计的时候就是为了使文本围绕在浮动对象的周围。")])])}],!1,null,null,null);a.default=e.exports}}]);