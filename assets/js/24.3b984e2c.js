(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{190:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h3",{attrs:{id:"_1-为什么要引入-react"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-为什么要引入-react","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 为什么要引入 React?")]),t._v(" "),s("p",[t._v("因为jsx只是React.createElement(component, props, ...children)的语法糖")]),t._v(" "),s("h3",{attrs:{id:"_2-为什么要用-classname-而不用-class？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-为什么要用-classname-而不用-class？","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 为什么要用 className 而不用 class？")]),t._v(" "),s("p",[t._v("class是一个关键字，以后可能会用到解构赋值，class属于关键字，所以不行")]),t._v(" "),s("h3",{attrs:{id:"_3-为什么组件用大写开头？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-为什么组件用大写开头？","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 为什么组件用大写开头？")]),t._v(" "),s("ul",[s("li",[t._v('React.createElement("div", null)')]),t._v(" "),s("li",[t._v('React.createElement("myDiv", null); // 无法创建myDiv元素')])]),t._v(" "),s("h3",{attrs:{id:"_4-为什么调用方法要-bind-this？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-为什么调用方法要-bind-this？","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. 为什么调用方法要 bind this？")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayThis")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里的 `this` 指向谁？")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("cb")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cb")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sayThis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 类似类组件中的render方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfoo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出结果是什么？")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])]),s("h3",{attrs:{id:"_5-为什么setstate要设置异步？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-为什么setstate要设置异步？","aria-hidden":"true"}},[t._v("#")]),t._v(" 5. 为什么setState要设置异步？")]),t._v(" "),s("p",[t._v("为了做性能优化，将 state 的更新延缓到最后批量合并再去渲染对于应用的性能优化是有极大好处的，如果每次的状态改变都去重新渲染真实 dom，那么它将带来巨大的性能消耗。")]),t._v(" "),s("h3",{attrs:{id:"_6-react为什么把事件都绑定到了document上？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-react为什么把事件都绑定到了document上？","aria-hidden":"true"}},[t._v("#")]),t._v(" 6. react为什么把事件都绑定到了document上？")]),t._v(" "),s("p",[t._v("还是为了性能优化吧")]),t._v(" "),s("h3",{attrs:{id:"_7-如何优化react组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-如何优化react组件","aria-hidden":"true"}},[t._v("#")]),t._v(" 7. 如何优化react组件")]),t._v(" "),s("p",[t._v("shouldcomponentupdate，拆分细粒度等等")]),t._v(" "),s("h3",{attrs:{id:"_8-类组件有什么缺点？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-类组件有什么缺点？","aria-hidden":"true"}},[t._v("#")]),t._v(" 8. 类组件有什么缺点？")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("状态逻辑难复用： 在组件之间复用状态逻辑很难，可能要用到 render props （渲染属性）或者 HOC（高阶组件），但无论是渲染属性，还是高阶组件，都会在原先的组件外包裹一层父容器（一般都是 div 元素），导致层级冗余\n趋向复杂难以维护：")])]),t._v(" "),s("li",[s("p",[t._v("在生命周期函数中混杂不相干的逻辑（如：在 componentDidMount 中注册事件以及其他的逻辑，在 componentWillUnmount 中卸载事件，这样分散不集中的写法，很容易写出 bug ）\n类组件中到处都是对状态的访问和处理，导致组件难以拆分成更小的组件")])]),t._v(" "),s("li",[s("p",[t._v("this 指向问题：父组件给子组件传递函数时，必须绑定 this")])])]),t._v(" "),s("h3",{attrs:{id:"_8-react-fiber？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-react-fiber？","aria-hidden":"true"}},[t._v("#")]),t._v(" 8. react fiber？")]),t._v(" "),s("p",[t._v("react fiber调度过程就类似requestIdleCallback，react之前是因为长时间占用主线程，主要是因为之前是树形结构，diff无法中断。16以后变成了链表结构")]),t._v(" "),s("h3",{attrs:{id:"_9-react泛谈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-react泛谈","aria-hidden":"true"}},[t._v("#")]),t._v(" 9. react泛谈")]),t._v(" "),s("p",[t._v("专注 view 层\nReact 官网是这么简介的。JavaScript library for building user interfaces.专注 view 层 的特点决定了它不是一个全能框架，相比 angular 这种全能框架，React 功能较简单，单一。比如说没有前端路由，没有状态管理，没有一站式开发文档等。")]),t._v(" "),s("p",[t._v("f(state) = view\nreact 组件是根据 state （或者 props）去渲染页面的，类似于一个函数，输入 state，输出 view。不过这不是完整意义上的 MDV（Model Driven View），没有完备的 model 层。顺便提一句，感觉现在的组件化和 MDV 在前端开发中正火热，大势所趋...")]),t._v(" "),s("h3",{attrs:{id:"_10-state、props数据流向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-state、props数据流向","aria-hidden":"true"}},[t._v("#")]),t._v(" 10. state、props数据流向")]),t._v(" "),s("p",[t._v("state 自上而下流向、Props 只读\n从我们最开始写 React 开始，就了解这条特点了。state 流向是自组件从外到内，从上到下的，而且传递下来的 props 是只读的，如果你想更改 props，只能上层组件传下一个包装好的 setState 方法。不像 angular 有 ng-model, vue 有 v-model， 提供了双向绑定的指令。React 中的约定就是这样，你可能觉得这很繁琐，不过 state 的流向却更清晰了，单向数据流在大型 spa 总是要讨好一些的。")]),t._v(" "),s("h3",{attrs:{id:"_11-什么时候需要考虑全局状态管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-什么时候需要考虑全局状态管理","aria-hidden":"true"}},[t._v("#")]),t._v(" 11. 什么时候需要考虑全局状态管理")]),t._v(" "),s("p",[t._v("这些特点决定了，React 本身是没有提供强大的状态管理功能的，那 React 组件是如何通信呢？原生大概是三种方式。")]),t._v(" "),s("p",[t._v("当你的应用有以下场景时，就要开始考虑状态管理:")]),t._v(" "),s("ul",[s("li",[t._v("组件之间需要状态共享。同一份数据需要响应到多个视图，且被多个视图进行变更")]),t._v(" "),s("li",[t._v("需要维护全局状态，并在他们变动时响应到视图")]),t._v(" "),s("li",[t._v("数据流变得复杂，React 组件本身已经无法驾驭。例如跨页面的用户协作")]),t._v(" "),s("li",[t._v("需要统一管理应用的状态。比如实现持久化，可恢复，可撤销/重做\n...")])]),t._v(" "),s("h3",{attrs:{id:"_12-状态设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-状态设计","aria-hidden":"true"}},[t._v("#")]),t._v(" 12.状态设计")]),t._v(" "),s("p",[t._v("数据类型一般分为领域数据(Domain data)和应用数据(或者称为 UI 数据). 在使用 Redux 时经常需要考虑状态要放在组件局部，还是所有状态都抽取到 Redux Store？把这些数据放到 Redux Store 里面处理起来好像更麻烦？既然都使用 Redux 了，不把数据抽取到 Redux Store 是否不符合最佳实践？ 笔者也时常有这样的困惑, 你也是最佳实践的受害者?\n我觉得可以从下面几个点进行考虑:")]),t._v(" "),s("ul",[s("li",[t._v("领域数据还是应用数据? 领域数据一般推荐放在 ReduxStore 中，我们通常会将 Redux 的 Store 看作一个数据库，存放范式化的数据。")]),t._v(" "),s("li",[t._v("状态是否会被多个组件或者跨页面共享？ Redux Store 是一个全局状态存储器，既然使用 Redux 了，有理由让 Redux 来管理跨越多组件的状态")]),t._v(" "),s("li",[t._v("状态是否需要被镜像化? 如果你的应用要做‘时间旅行(撤销/重做)’或者应用持久化，这个状态需要被恢复，那么应该放到 Redux Store，集中化管理数据是 Redux 的强项")]),t._v(" "),s("li",[t._v("状态是否需要跨越组件的生命周期？ 将状态放在组件局部，就会跟着组件一起被销毁。如果希望状态跨越组件的生命周期，应该放到父组件或者 Redux Store 中. 比如一个模态框编辑的数据在关闭后是否需要保留")])]),t._v(" "),s("p",[t._v("原则是能放在局部的就放在局部. 在局部状态和全局状态中取舍需要一点开发经验.\n另外作为一个集中化的状态管理器，为了状态的可读性(更容易理解)和可操作性(更容易增删查改)，在状态结构上面的设计也需要花费一些精力的. 这个数据库结构的设计方法是一样的, 在设计状态之前你需要理清各种领域对象之间的关系, 在数据获取和数据变更操作复杂度/性能之间取得平衡.\nRedux 官方推荐范式化 State，扁平化结构树, 减少嵌套，减少数据冗余. 也就是倾向于更方便被更新和存储，至于视图需要什么则交由 reselect 这些库进行计算映射和组合.\n所以说 Redux 没那么简单, 当然 80%的 Web 应用也不需要这么复杂.")]),t._v(" "),s("h3",{attrs:{id:"_13-react-fiber（引入调度者？）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-react-fiber（引入调度者？）","aria-hidden":"true"}},[t._v("#")]),t._v(" 13.react fiber（引入调度者？）")]),t._v(" "),s("ul",[s("li",[t._v("调和阶段(Reconciler)：官方解释。React 会自顶向下通过递归，遍历新数据生成新的 Virtual DOM，然后通过 Diff 算法，找到需要变更的元素(Patch)，放到更新队列里面去。")]),t._v(" "),s("li",[t._v("渲染阶段(Renderer)：遍历更新队列，通过调用宿主环境的API，实际更新渲染对应元素。宿主环境，比如 DOM、Native、WebGL 等。\n在协调阶段阶段，由于是采用的递归的遍历方式，这种也被成为 Stack Reconciler，主要是为了区别 Fiber Reconciler 取的一个名字。这种方式有一个特点：一旦任务开始进行，就无法中断，那么 js 将一直占用主线程， 一直要等到整棵 Virtual DOM 树计算完成之后，才能把执行权交给渲染引擎，那么这就会导致一些用户交互、动画等任务无法立即得到处理，就会有卡顿，非常的影响用户体验。")])]),t._v(" "),s("h3",{attrs:{id:"_14-fiber内部原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-fiber内部原理","aria-hidden":"true"}},[t._v("#")]),t._v(" 14.fiber内部原理")]),t._v(" "),s("ul",[s("li",[t._v("关键字（单链表，双缓冲技术）")])]),t._v(" "),s("h3",{attrs:{id:"_15-react-diff有哪些目的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-react-diff有哪些目的","aria-hidden":"true"}},[t._v("#")]),t._v(" 15.react diff有哪些目的")]),t._v(" "),s("ul",[s("li",[t._v("Diff 的目的就是为了复用，为什么diff TextNode类型为什么不用循环递归策略去比较，TextNode(包含字符串和数字)")]),t._v(" "),s("li",[t._v("当 key 相同，React 会认为是同一个节点，所以当 key 相同，节点类型不同的时候，React 会认为你已经把这个节点重新覆盖了，所以就不会再去找剩余的节点是否可以复用。只有在 key 不同的时候，才会去找兄弟节点是否可以复用")]),t._v(" "),s("li",[t._v("数组diff遍历\n"),s("ul",[s("li",[t._v("第一遍历新数组，新老数组相同 index 进行对比，通过 updateSlot方法找到可以复用的节点，直到找到不可以复用的节点就退出循环。")]),t._v(" "),s("li",[t._v("第一遍历完之后，删除剩余的老节点，追加剩余的新节点的过程。如果是新节点已遍历完成，就将剩余的老节点批量删除；如果是老节点遍历完成仍有新节点剩余，则将新节点直接插入。")]),t._v(" "),s("li",[t._v("把所有老数组元素按 key 或 index 放 Map 里，然后遍历新数组，插入老数组的元素，这是移动的情况。")])])])]),t._v(" "),s("h3",{attrs:{id:"_16-react-diff有哪些类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-react-diff有哪些类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 16.react diff有哪些类型")]),t._v(" "),s("p",[t._v("对于 Diff， 新老节点的对比，我们以新节点为标准，然后来构建整个 currentInWorkProgress，对于新的 children 会有四种情况。")]),t._v(" "),s("ul",[s("li",[t._v("单个 React Element(通过该节点是否有 $$typeof 区分)")]),t._v(" "),s("li",[t._v("数组")]),t._v(" "),s("li",[t._v("可迭代的 children，跟数组的处理方式差不多")]),t._v(" "),s("li",[t._v("TextNode(包含字符串和数字)")])]),t._v(" "),s("h3",{attrs:{id:"_17-为什么surper要传props，"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-为什么surper要传props，","aria-hidden":"true"}},[t._v("#")]),t._v(" 17.为什么surper要传props，")]),t._v(" "),s("p",[t._v("因为不传的话构造函数执行完之前，打印this.props是underfined")]),t._v(" "),s("h3",{attrs:{id:"_18-如何编写有弹性的组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-如何编写有弹性的组件","aria-hidden":"true"}},[t._v("#")]),t._v(" 18.如何编写有弹性的组件")]),t._v(" "),s("ul",[s("li",[t._v("不阻断数据流 props 和 state 可能会更新，组件应该处理好这些更新，不论什么时候。")]),t._v(" "),s("li",[t._v("时刻准备渲染 一个组件不应该被或多或少的渲染而损坏。")]),t._v(" "),s("li",[t._v("没有单例组件 即使组件只渲染一次，但通过设计让它渲染两次也不会被破坏，是更好了。")]),t._v(" "),s("li",[t._v("隔离本地状态 想想哪个状态是特定 UI 展示下的本地状态——并且除非必要，不要将该状态提升到更高的地方。")])]),t._v(" "),s("h3",{attrs:{id:"_19-react怎么区分函数组件跟类组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-react怎么区分函数组件跟类组件","aria-hidden":"true"}},[t._v("#")]),t._v(" 19.react怎么区分函数组件跟类组件")]),t._v(" "),s("p",[t._v("类组件原型加了一个isReactClassComponent对象属性，为什么不直接直接用原型比较instanceof，new等方式判断？因为有箭头函数这类等障碍")]),t._v(" "),s("h3",{attrs:{id:"_20-react元素为什么有一个-typeof属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-react元素为什么有一个-typeof属性","aria-hidden":"true"}},[t._v("#")]),t._v(" 20.react元素为什么有一个$$typeof属性")]),t._v(" "),s("p",[t._v("因为JSON不支持 Symbol 类型。所以即使服务器存在用JSON作为文本返回安全漏洞")]),t._v(" "),s("h3",{attrs:{id:"_21-为什么hooks必须要按顺序执行调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-为什么hooks必须要按顺序执行调用","aria-hidden":"true"}},[t._v("#")]),t._v(" 21.为什么hooks必须要按顺序执行调用")]),t._v(" "),s("ul",[s("li",[t._v("顺序调用解决重复命名的问题\nconst [name, setName] = useState('name');\nconst [name, setName] = useState('name');\n实际中 Hooks 提案通过依赖顺序调用来解决这个问题：即使两个 Hooks 都用 name state 变量，它们也会彼此隔离，每次调用 useState() 都会获得独立的 「内存单元」。")]),t._v(" "),s("li",[t._v("同一个hook可以调用多次")]),t._v(" "),s("li",[t._v("多层继承也不会混乱")]),t._v(" "),s("li",[t._v("需要一个代码检查工具")])]),t._v(" "),s("h3",{attrs:{id:"_22-useeffects为什么每次都要渲染，不加依赖的话"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-useeffects为什么每次都要渲染，不加依赖的话","aria-hidden":"true"}},[t._v("#")]),t._v(" 22.useEffects为什么每次都要渲染，不加依赖的话")]),t._v(" "),s("p",[t._v("为了把每次等值给存下来，拿到的总是定义它的那次渲染中的props和state，比如函数组件跟类组件比较时候出现的问题，拿到的总是合并更新后的值")]),t._v(" "),s("h3",{attrs:{id:"_23-函数组件跟类组件的区别？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-函数组件跟类组件的区别？","aria-hidden":"true"}},[t._v("#")]),t._v(" 23.函数组件跟类组件的区别？")]),t._v(" "),s("p",[t._v("setTimeOut里面获取到到值是不一样到，还有类似this.props.user,永远获取的是最新的state")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProfilePage")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("showMessage")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Followed '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("handleClick")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("showMessage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button onClick"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("handleClick"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Follow"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ProfilePage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("showMessage")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Followed '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("handleClick")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("showMessage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button onClick"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("handleClick"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Follow"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br")])]),s("h3",{attrs:{id:"_23-react-fiber-diff更新"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-react-fiber-diff更新","aria-hidden":"true"}},[t._v("#")]),t._v(" 23.React fiber diff更新")]),t._v(" "),s("p",[t._v("其实在一个 React 应用中，通常来说都有两个 fiebr 树，一个叫做 old tree，另一个叫做 workInProgress tree。前者对应着已经渲染好的 DOM 树，后者是正在执行更新中的 fiber tree，还能便于中断后恢复。两棵树的节点互相引用，便于共享一些内部的属性，减少内存的开销。毕竟前文说过每个组件或 DOM 都会对应着一个 fiber 对象，应用很大的话组成的 fiber 树也会很大，如果两棵树都是各自把一些相同的属性创建一遍的话，会损失不少的内存空间及性能。")]),t._v(" "),s("p",[t._v("计算时间公司来算出空闲时间进行任务调度")]),t._v(" "),s("p",[t._v("在 React 15 版本的时候，我们如果有组件需要更新的话，那么就会递归向下遍历整个虚拟 DOM 树来判断需要更新的地方。这种递归的方式弊端在于无法中断，必须更新完所有组件才会停止。这样的弊端会造成如果我们需要更新一些庞大的组件，那么在更新的过程中可能就会长时间阻塞主线程，从而造成用户的交互、动画的更新等等都不能及时响应。")])])}],!1,null,null,null);a.default=n.exports}}]);